# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

defaults: &defaults
  docker:
    - image: circleci/node:13.8.0

commands:
  print_pipeline_id:
    description: "Just Testing Command"
    parameters:
      to:
        type: string
        default: "Hello This is my circle ci"
    steps:
      - run: echo  "Hello, This is my circle ci id <<parameters.to>>"

jobs:
  say_hello:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Print Hello"
          command: "echo Hello"
  testing_command:
    <<: *defaults
    steps:
      - checkout
      - print_pipeline_id:
          to : $CIRCLE_WORKFLOW_ID
  # print-world:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Print World"
  #         command: "echo World"
  # print_project_env_var:
  #   <<: *defaults
  #   steps:
  #     - checkout
  #     -  run: 
  #         name: "Print out env var"
  #         command: echo $MyName . This is my env var
  # save_hello_world_output:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run:
  #         name: "Echo my project settiing env var"
  #         command: echo "Text to output here" > ~/output.txt
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - output.txt
  # print_output_file:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #   - checkout
  #   - attach_workspace:
  #      at: ~/
  #   - run:
  #       name: "Print out file persisted to workspace"
  #       command: cat ~/output.txt
workflows:
  say-hello-workflow:
    jobs:
      # - print_project_env_var
      - say_hello
      - testing_command
      # - print-hello
      # - print-world:
      #     requires:
      #       - print-hello
      # - save_hello_world_output
      # - print_output_file:
      #     requires:
      #       - save_hello_world_output
